// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Location struct {
	ID   *int    `json:"id,omitempty"`
	Path *string `json:"path,omitempty"`
}

func (o *Location) GetID() *int {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Location) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

type GetAllLibrariesDirectory struct {
	AllowSync  *bool   `json:"allowSync,omitempty"`
	Art        *string `json:"art,omitempty"`
	Composite  *string `json:"composite,omitempty"`
	Filters    *bool   `json:"filters,omitempty"`
	Refreshing *bool   `json:"refreshing,omitempty"`
	Thumb      *string `json:"thumb,omitempty"`
	Key        *string `json:"key,omitempty"`
	Type       *string `json:"type,omitempty"`
	Title      *string `json:"title,omitempty"`
	Agent      *string `json:"agent,omitempty"`
	Scanner    *string `json:"scanner,omitempty"`
	Language   *string `json:"language,omitempty"`
	UUID       *string `json:"uuid,omitempty"`
	// Unix epoch datetime
	UpdatedAt *int64 `json:"updatedAt,omitempty"`
	// Unix epoch datetime
	CreatedAt *int64 `json:"createdAt,omitempty"`
	// Unix epoch datetime
	ScannedAt        *int64     `json:"scannedAt,omitempty"`
	Content          *bool      `json:"content,omitempty"`
	Directory        *bool      `json:"directory,omitempty"`
	ContentChangedAt *int       `json:"contentChangedAt,omitempty"`
	Hidden           *int       `json:"hidden,omitempty"`
	Location         []Location `json:"Location,omitempty"`
}

func (o *GetAllLibrariesDirectory) GetAllowSync() *bool {
	if o == nil {
		return nil
	}
	return o.AllowSync
}

func (o *GetAllLibrariesDirectory) GetArt() *string {
	if o == nil {
		return nil
	}
	return o.Art
}

func (o *GetAllLibrariesDirectory) GetComposite() *string {
	if o == nil {
		return nil
	}
	return o.Composite
}

func (o *GetAllLibrariesDirectory) GetFilters() *bool {
	if o == nil {
		return nil
	}
	return o.Filters
}

func (o *GetAllLibrariesDirectory) GetRefreshing() *bool {
	if o == nil {
		return nil
	}
	return o.Refreshing
}

func (o *GetAllLibrariesDirectory) GetThumb() *string {
	if o == nil {
		return nil
	}
	return o.Thumb
}

func (o *GetAllLibrariesDirectory) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *GetAllLibrariesDirectory) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *GetAllLibrariesDirectory) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *GetAllLibrariesDirectory) GetAgent() *string {
	if o == nil {
		return nil
	}
	return o.Agent
}

func (o *GetAllLibrariesDirectory) GetScanner() *string {
	if o == nil {
		return nil
	}
	return o.Scanner
}

func (o *GetAllLibrariesDirectory) GetLanguage() *string {
	if o == nil {
		return nil
	}
	return o.Language
}

func (o *GetAllLibrariesDirectory) GetUUID() *string {
	if o == nil {
		return nil
	}
	return o.UUID
}

func (o *GetAllLibrariesDirectory) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *GetAllLibrariesDirectory) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *GetAllLibrariesDirectory) GetScannedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.ScannedAt
}

func (o *GetAllLibrariesDirectory) GetContent() *bool {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *GetAllLibrariesDirectory) GetDirectory() *bool {
	if o == nil {
		return nil
	}
	return o.Directory
}

func (o *GetAllLibrariesDirectory) GetContentChangedAt() *int {
	if o == nil {
		return nil
	}
	return o.ContentChangedAt
}

func (o *GetAllLibrariesDirectory) GetHidden() *int {
	if o == nil {
		return nil
	}
	return o.Hidden
}

func (o *GetAllLibrariesDirectory) GetLocation() []Location {
	if o == nil {
		return nil
	}
	return o.Location
}

type GetAllLibrariesMediaContainer struct {
	Size      int                        `json:"size"`
	AllowSync bool                       `json:"allowSync"`
	Title1    string                     `json:"title1"`
	Directory []GetAllLibrariesDirectory `json:"Directory,omitempty"`
}

func (o *GetAllLibrariesMediaContainer) GetSize() int {
	if o == nil {
		return 0
	}
	return o.Size
}

func (o *GetAllLibrariesMediaContainer) GetAllowSync() bool {
	if o == nil {
		return false
	}
	return o.AllowSync
}

func (o *GetAllLibrariesMediaContainer) GetTitle1() string {
	if o == nil {
		return ""
	}
	return o.Title1
}

func (o *GetAllLibrariesMediaContainer) GetDirectory() []GetAllLibrariesDirectory {
	if o == nil {
		return nil
	}
	return o.Directory
}

// GetAllLibrariesResponseBody - The libraries available on the Server
type GetAllLibrariesResponseBody struct {
	MediaContainer *GetAllLibrariesMediaContainer `json:"MediaContainer,omitempty"`
}

func (o *GetAllLibrariesResponseBody) GetMediaContainer() *GetAllLibrariesMediaContainer {
	if o == nil {
		return nil
	}
	return o.MediaContainer
}

type GetAllLibrariesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The libraries available on the Server
	Object *GetAllLibrariesResponseBody
}

func (o *GetAllLibrariesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAllLibrariesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAllLibrariesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAllLibrariesResponse) GetObject() *GetAllLibrariesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
