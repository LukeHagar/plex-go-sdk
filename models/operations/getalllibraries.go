// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Location struct {
	ID   int    `json:"id"`
	Path string `json:"path"`
}

func (o *Location) GetID() int {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *Location) GetPath() string {
	if o == nil {
		return ""
	}
	return o.Path
}

type GetAllLibrariesDirectory struct {
	AllowSync  bool   `json:"allowSync"`
	Art        string `json:"art"`
	Composite  string `json:"composite"`
	Filters    bool   `json:"filters"`
	Refreshing bool   `json:"refreshing"`
	Thumb      string `json:"thumb"`
	Key        string `json:"key"`
	Type       string `json:"type"`
	Title      string `json:"title"`
	Agent      string `json:"agent"`
	Scanner    string `json:"scanner"`
	Language   string `json:"language"`
	UUID       string `json:"uuid"`
	// Unix epoch datetime in seconds
	UpdatedAt int64 `json:"updatedAt"`
	// Unix epoch datetime in seconds
	CreatedAt int64 `json:"createdAt"`
	// Unix epoch datetime in seconds
	ScannedAt int64 `json:"scannedAt"`
	Content   bool  `json:"content"`
	Directory bool  `json:"directory"`
	// Unix epoch datetime in seconds
	ContentChangedAt int64      `json:"contentChangedAt"`
	Hidden           int        `json:"hidden"`
	Location         []Location `json:"Location"`
}

func (o *GetAllLibrariesDirectory) GetAllowSync() bool {
	if o == nil {
		return false
	}
	return o.AllowSync
}

func (o *GetAllLibrariesDirectory) GetArt() string {
	if o == nil {
		return ""
	}
	return o.Art
}

func (o *GetAllLibrariesDirectory) GetComposite() string {
	if o == nil {
		return ""
	}
	return o.Composite
}

func (o *GetAllLibrariesDirectory) GetFilters() bool {
	if o == nil {
		return false
	}
	return o.Filters
}

func (o *GetAllLibrariesDirectory) GetRefreshing() bool {
	if o == nil {
		return false
	}
	return o.Refreshing
}

func (o *GetAllLibrariesDirectory) GetThumb() string {
	if o == nil {
		return ""
	}
	return o.Thumb
}

func (o *GetAllLibrariesDirectory) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *GetAllLibrariesDirectory) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *GetAllLibrariesDirectory) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *GetAllLibrariesDirectory) GetAgent() string {
	if o == nil {
		return ""
	}
	return o.Agent
}

func (o *GetAllLibrariesDirectory) GetScanner() string {
	if o == nil {
		return ""
	}
	return o.Scanner
}

func (o *GetAllLibrariesDirectory) GetLanguage() string {
	if o == nil {
		return ""
	}
	return o.Language
}

func (o *GetAllLibrariesDirectory) GetUUID() string {
	if o == nil {
		return ""
	}
	return o.UUID
}

func (o *GetAllLibrariesDirectory) GetUpdatedAt() int64 {
	if o == nil {
		return 0
	}
	return o.UpdatedAt
}

func (o *GetAllLibrariesDirectory) GetCreatedAt() int64 {
	if o == nil {
		return 0
	}
	return o.CreatedAt
}

func (o *GetAllLibrariesDirectory) GetScannedAt() int64 {
	if o == nil {
		return 0
	}
	return o.ScannedAt
}

func (o *GetAllLibrariesDirectory) GetContent() bool {
	if o == nil {
		return false
	}
	return o.Content
}

func (o *GetAllLibrariesDirectory) GetDirectory() bool {
	if o == nil {
		return false
	}
	return o.Directory
}

func (o *GetAllLibrariesDirectory) GetContentChangedAt() int64 {
	if o == nil {
		return 0
	}
	return o.ContentChangedAt
}

func (o *GetAllLibrariesDirectory) GetHidden() int {
	if o == nil {
		return 0
	}
	return o.Hidden
}

func (o *GetAllLibrariesDirectory) GetLocation() []Location {
	if o == nil {
		return []Location{}
	}
	return o.Location
}

type GetAllLibrariesMediaContainer struct {
	Size      int                        `json:"size"`
	AllowSync bool                       `json:"allowSync"`
	Title1    string                     `json:"title1"`
	Directory []GetAllLibrariesDirectory `json:"Directory"`
}

func (o *GetAllLibrariesMediaContainer) GetSize() int {
	if o == nil {
		return 0
	}
	return o.Size
}

func (o *GetAllLibrariesMediaContainer) GetAllowSync() bool {
	if o == nil {
		return false
	}
	return o.AllowSync
}

func (o *GetAllLibrariesMediaContainer) GetTitle1() string {
	if o == nil {
		return ""
	}
	return o.Title1
}

func (o *GetAllLibrariesMediaContainer) GetDirectory() []GetAllLibrariesDirectory {
	if o == nil {
		return []GetAllLibrariesDirectory{}
	}
	return o.Directory
}

// GetAllLibrariesResponseBody - The libraries available on the Server
type GetAllLibrariesResponseBody struct {
	MediaContainer GetAllLibrariesMediaContainer `json:"MediaContainer"`
}

func (o *GetAllLibrariesResponseBody) GetMediaContainer() GetAllLibrariesMediaContainer {
	if o == nil {
		return GetAllLibrariesMediaContainer{}
	}
	return o.MediaContainer
}

type GetAllLibrariesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// The libraries available on the Server
	Object *GetAllLibrariesResponseBody
}

func (o *GetAllLibrariesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAllLibrariesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAllLibrariesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAllLibrariesResponse) GetObject() *GetAllLibrariesResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}
