// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package sdkerrors

import (
	"encoding/json"
	"net/http"
)

type UploadPlaylistPlaylistsErrors struct {
	Code    *int64  `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int64  `json:"status,omitempty"`
}

func (o *UploadPlaylistPlaylistsErrors) GetCode() *int64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *UploadPlaylistPlaylistsErrors) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UploadPlaylistPlaylistsErrors) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// UploadPlaylistUnauthorized - Unauthorized - Returned if the X-Plex-Token is missing from the header or query.
type UploadPlaylistUnauthorized struct {
	Errors []UploadPlaylistPlaylistsErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &UploadPlaylistUnauthorized{}

func (e *UploadPlaylistUnauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}

type UploadPlaylistErrors struct {
	Code    *int64  `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Status  *int64  `json:"status,omitempty"`
}

func (o *UploadPlaylistErrors) GetCode() *int64 {
	if o == nil {
		return nil
	}
	return o.Code
}

func (o *UploadPlaylistErrors) GetMessage() *string {
	if o == nil {
		return nil
	}
	return o.Message
}

func (o *UploadPlaylistErrors) GetStatus() *int64 {
	if o == nil {
		return nil
	}
	return o.Status
}

// UploadPlaylistBadRequest - Bad Request - A parameter was not specified, or was specified incorrectly.
type UploadPlaylistBadRequest struct {
	Errors []UploadPlaylistErrors `json:"errors,omitempty"`
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response `json:"-"`
}

var _ error = &UploadPlaylistBadRequest{}

func (e *UploadPlaylistBadRequest) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
